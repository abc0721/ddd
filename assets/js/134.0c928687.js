(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{1023:function(t,e,s){"use strict";s.r(e);var r=s(13),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"_130-商品详情页动态渲染系统-使用多线程并发提升系统吞吐量的设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_130-商品详情页动态渲染系统-使用多线程并发提升系统吞吐量的设计"}},[t._v("#")]),t._v(" 130. 商品详情页动态渲染系统：使用多线程并发提升系统吞吐量的设计")]),t._v(" "),r("p",[r("img",{attrs:{src:s(422),alt:""}})]),t._v(" "),r("ul",[r("li",[r("p",[t._v("数据同步服务做并发化+合并")]),t._v(" "),r("p",[t._v("将多个变更消息合并在一起，调用依赖服务一次接口获取多个数据，采用多线程并发调用")]),t._v(" "),r("p",[t._v("这里不明白的是，收到变更事件之后，需要去拉取数据？而不是把变更的数据随着事件传递吗？")])]),t._v(" "),r("li",[r("p",[t._v("数据聚合服务做并发化")]),t._v(" "),r("p",[t._v("每次重新聚合数据的时候，对多个原子数据用多线程并发从 redis 查询")])])]),t._v(" "),r("iframe",{attrs:{height:"500px",width:"100%",frameborder:"0",allowfullscreen:"true",src:t.$withBase("/ads.html")}})])}),[],!1,null,null,null);e.default=a.exports},422:function(t,e,s){t.exports=s.p+"assets/img/markdown-img-paste-20190714172743269.cd24d5da.png"}}]);